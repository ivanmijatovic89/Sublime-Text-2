<snippet>
  <!-- Example: Hello, ${1:this} is a ${2:snippet}. -->
  <content><![CDATA[
/$.ajax({
type: "POST",
url: url,
data: data,
success: success,
dataType: dataType
});

$.post( "ajax/test.html", function( data ) {
$( ".result" ).html( data );
});

//Example: Request the test.php page, but ignore the return results.
$.post( "test.php" );

//Example: Request the test.php page and send some additional data along (while still ignoring the return results).
$.post( "test.php", { name: "John", time: "2pm" } );

//Example: Pass arrays of data to the server (while still ignoring the return results).
$.post( "test.php", { 'choices[]': [ "Jon", "Susan" ] } );

Example: Send form data using ajax requests
$.post( "test.php", $( "#testform" ).serialize() );

//Example: Alert the results from requesting test.php (HTML or XML, depending on what was returned).
$.post( "test.php", function( data ) {
alert( "Data Loaded: " + data );
});

//Example: Alert the results from requesting test.php with an additional payload of data (HTML or XML, depending on what was returned).
$.post( "test.php", { name: "John", time: "2pm" })
.done(function( data ) {
alert( "Data Loaded: " + data );
});

//Example: Post to the test.php page and get content which has been returned in json format (<?php echo json_encode(array("name"=>"John","time"=>"2pm")); ?>).
$.post( "test.php", { func: "getNameAndTime" }, function( data ) {
console.log( data.name ); // John
console.log( data.time ); // 2pm
}, "json");
]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>jpost</tabTrigger>
  <description>Jquery .post() Ajax</description>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <scope>text.xml, string.unquoted.cdata.xml, source.js, source.php , source.html</scope>
</snippet>